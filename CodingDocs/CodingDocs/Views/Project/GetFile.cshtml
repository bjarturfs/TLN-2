@model CodingDocs.Models.ViewModels.FileViewModel

@{
    ViewBag.Title = Model.Name + "." + Model.Type;
}
<link href="~/Content/file.css" rel="stylesheet" type="text/css">


<div class="nameOfFile">
    <h2 id="file_name">@(Model.Project.Name + "/" + Model.Name + "." + Model.Type)</h2>

    <div id="editor"></div>
    <br />

    <div class="inline_buttons">
        @using (Html.BeginForm("SaveFile", "Project", FormMethod.Post))
        {
            @Html.Hidden("Content", null, new { @id = "hidden_content" })
            @Html.Hidden("Id", null, new { @id = "hidden_id" })
            <input type="submit" value="Save" class="btn btn-primary editor_button" />
        }

        @Html.ActionLink("Back to Project", "ViewProject", new { id = Model.Project.ID }, new { @class = "btn btn-default editor_button" })
    </div>
</div>
@section scripts{
    <script src="~/Ace/src/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var editor = ace.edit("editor");
        var editorMode = 'ace/mode/plain_text';
        editorMode = 'ace/mode/plain_text';

        switch("@Model.Type") {
            case "c":
            case "cpp":
                editorMode = 'ace/mode/c_cpp';
                break;
            case "cs":
                editorMode = 'ace/mode/csharp';
                break;
            case "css":
                editorMode = 'ace/mode/css';
                break;
            case "html":
                editorMode = 'ace/mode/html';
                break;
            case "java":
                editorMode = 'ace/mode/java';
                break;
            case "js":
                editorMode = 'ace/mode/javascript';
                break;
            case "php":
                editorMode = 'ace/mode/php';
                break;
            case "py":
                editorMode = 'ace/mode/python';
                break;
            case "sql":
                editorMode = 'ace/mode/sql';
                break;
        }

        editor.setOptions({
            useWrapMode: true,
            highlightActiveLine: true,
            showPrintMargin: false,
            theme: 'ace/theme/tomorrow_night',
            mode: editorMode,
        });

        editor.setFontSize(17);
        var content = htmlDecode(`@Model.Content`);
        if("@Model.Type" == "html") content = htmlDecode(content);
        editor.setValue(content, -1);

        $("form").submit(function () {
            var editorContent = editor.getSession().getValue();
            if("@Model.Type" == "html") editorContent = htmlEncode(editorContent)

            $("#hidden_content").val(editorContent);
            $("#hidden_id").val(current);

            var form = $(this);
            $.ajax({
                url: form.attr("action"),
                data: form.serialize(),
                method: "POST",
                success: function (responseData) {
                    document.activeElement.blur();
                }
            });
            return false;
        });

        var codeHub = $.connection.codeHub;
        var silent = false;
        var current = @Model.ID;

        codeHub.client.onChange = function (changeData) {
            silent = true;
            editor.getSession().getDocument().applyDelta(changeData);
            silent = false;
        };

        $.connection.hub.start().done(function () {

            codeHub.server.joinDocument(current);

            editor.on("change", function (obj) {
                if (silent) {
                    return;
                }
                codeHub.server.onChange(obj, current);
            })
        });

        function htmlEncode(value){
            return $('<div/>').text(value).html();
        }

        function htmlDecode(value){
            return $('<div/>').html(value).text();
        }
    </script>
}

